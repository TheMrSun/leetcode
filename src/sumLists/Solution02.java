package sumLists;

/**
 * @author Slience
 * @version 1.0
 */
//ÁªôÂÆö‰∏§‰∏™Áî®ÈìæË°®Ë°®Á§∫ÁöÑÊï¥Êï∞ÔºåÊØè‰∏™ËäÇÁÇπÂåÖÂê´‰∏Ä‰∏™Êï∞‰Ωç„ÄÇ
//
// Ëøô‰∫õÊï∞‰ΩçÊòØÂèçÂêëÂ≠òÊîæÁöÑÔºå‰πüÂ∞±ÊòØ‰∏™‰ΩçÊéíÂú®ÈìæË°®È¶ñÈÉ®„ÄÇ
//
// ÁºñÂÜôÂáΩÊï∞ÂØπËøô‰∏§‰∏™Êï¥Êï∞Ê±ÇÂíåÔºåÂπ∂Áî®ÈìæË°®ÂΩ¢ÂºèËøîÂõûÁªìÊûú„ÄÇ
//
//
//
// Á§∫‰æãÔºö
//
// ËæìÂÖ•Ôºö(7 -> 1 -> 6) + (5 -> 9 -> 2)ÔºåÂç≥617 + 295
//ËæìÂá∫Ôºö2 -> 1 -> 9ÔºåÂç≥912
//
//
// ËøõÈò∂ÔºöÊÄùËÄÉ‰∏Ä‰∏ãÔºåÂÅáËÆæËøô‰∫õÊï∞‰ΩçÊòØÊ≠£ÂêëÂ≠òÊîæÁöÑÔºåÂèàËØ•Â¶Ç‰ΩïËß£ÂÜ≥Âë¢?
//
// Á§∫‰æãÔºö
//
// ËæìÂÖ•Ôºö(6 -> 1 -> 7) + (2 -> 9 -> 5)ÔºåÂç≥617 + 295
//ËæìÂá∫Ôºö9 -> 1 -> 2ÔºåÂç≥912
//
// Related Topics ÈÄíÂΩí ÈìæË°® Êï∞Â≠¶
// üëç 144 üëé 0

import org.junit.Test;

/**
 * ÈÄíÂΩí
 * <p>
 * (7 -> 1 -> 6) + (5 -> 9 -> 2) carry
 * 1->6 9->2 carry
 * 6 2 carry
 * null null carry != 0
 * null null carry = 0
 *
 *
 *
 */


public class Solution02 {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode res = new ListNode(0);
        addTwo(res, l1, l2, 0);
        return res.next;
    }

    private void addTwo(ListNode res, ListNode l1, ListNode l2, int carry) {
        if (l1 == null && l2 == null && carry == 0) {
            return;
        }
        int sum = (l1 != null ? l1.val : 0) + (l2 != null ? l2.val : 0) + carry;
        res.next = new ListNode(sum % 10);
        carry = sum / 10;
        addTwo(res.next, l1 != null ? l1.next : null, l2 != null ? l2.next : null, carry);
    }

    @Test
    public void test() {
        ListNode l1Node = new ListNode(7);
        ListNode l1Node2 = new ListNode(1);
        ListNode l1Node3 = new ListNode(6);

        l1Node.next = l1Node2;
        l1Node2.next = l1Node3;

        ListNode l2Node = new ListNode(5);
        ListNode l2Node2 = new ListNode(9);
        ListNode l2Node3 = new ListNode(2);

        l2Node.next = l2Node2;
        l2Node2.next = l2Node3;

        System.out.println(new Solution02().addTwoNumbers(l1Node, l2Node));

    }


}
